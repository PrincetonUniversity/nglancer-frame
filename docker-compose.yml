version: '3.4'
services:
  confproxy:
    env_file: .env
    image: jupyterhub/configurable-http-proxy:3.1.1
    # expose the proxy to the world
    ports:
      - "8000:8000"
      - "8001:8001"
    command: ['configurable-http-proxy',
              '--auto-rewrite',
              '--no-include-prefix',
              '--no-prepend-path',
              '--log-level', 'debug',
              '--api-ip', '0.0.0.0']
  apacheproxy:
    env_file: .env
    build:
      context: ./apache
      dockerfile: apacheproxy.dockerfile
    volumes:
      - ./apache/sites:/usr/local/apache2/conf/sites/
    ports:
      - "80:80"
  flask-root:
    env_file: .env
    build:
      context: ./flask-root
      dockerfile: flask-root.Dockerfile
    volumes:
      - ./flask-root/app:/opt/app
      - ./libraries:/opt/libraries
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '5000:5000'
  # nglancerstatic:
  #   env_file: .env
  #   volumes:
  #     - /home/ahoag/Git/neuroglancer:/opt/neuroglancer
  #   build:
  #     context: ./nglancerstatic
  #     dockerfile: nglancerstatic.Dockerfile
  #   ports:
  #     - '8080:8080'
  # adding an all in memory redis server; this will and is meant to lose state
  # between relaunches of the service. Self registering services should get
  # code that verifies periodically that they are correctly registered to the
  # key value store.
  redis:
    image: redis
    expose:
      - 6379
 
networks:
  default:
    external:
      name: nglancer
