#LoadModule proxy_module modules/mod_proxy.so
#LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
#LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
#LoadModule proxy_http_module modules/mod_proxy_http.so

<VirtualHost _default_:80>

#LogLevel debug

## set fake remote user for testing purposes:
RequestHeader set X-Remote-User 'testuser'

## setup reverse proxy to flask app.
  #ProxyPreserveHost On


  ## access test volume - this volume is provided by docker-compose service:
  # testcv
  ProxyPass "/testcv" "http://testcv:1337" flushpackets=on
  ProxyPassReverse "/testcv" "http://testcv:1337"

 ## setup pass for volumes - this is provided by the configurable proxy
  ProxyPass "/vols" "http://confproxy:8000" flushpackets=on
  ProxyPassReverse "/vols" "http://confproxy:8000"

  <Location "/nglancer">
       ## neuroglancer
      RequestHeader set Origin "http://confproxy:8888"
      ProxyPass  "http://confproxy:8000/viewers" flushpackets=on
      ProxyPassReverse  "http://confproxy:8000/viewers"

  </Location>

  <Location "/cv">
       ## cloudvolume
      RequestHeader set Origin "http://confproxy:8888"
      ProxyPass  "http://confproxy:8000/cloudvols" flushpackets=on
      ProxyPassReverse  "http://confproxy:8000/cloudvols"

  </Location>

  ## jupyter notebook
      Header set Origin "http://notebook:8888"
      RequestHeader set Origin "http://notebook:8888"
      ProxyPass /notebook/terminals/websocket/       ws://notebook:8888/notebook/terminals/websocket/
      ProxyPassReverse /notebook/terminals/websocket/ ws://notebook:8888/notebook/terminals/websocket/

      ProxyPass /notebook/api/kernels/ ws://notebook:8888/notebook/api/kernels/
      ProxyPassReverse /notebook/api/kernels/ ws://notebook:8888/notebook/api/kernels/

      ProxyPass /notebook http://notebook:8888/notebook
      ProxyPassReverse /notebook http://notebook:8888/notebook


      ProxyPass / http://flask-root:5000/
      ProxyPassReverse / http://flask-root:5000/

</VirtualHost>
